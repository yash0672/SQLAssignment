								Hotwax SQL Assignment

1) Salespeople

CREATE TABLE SalesPeople(SNUM int PRIMARY KEY, SNAME varchar(255), CITY varchar(255),COMM int);

INSERT INTO SalesPeople VALUES 
(1001,"Peel","London",.12),
(1002,"Serres","SanJose",.13),
(1004,"Motika","London",.11),
(1007,"Rifkn","Barcelona",.15),
(1003,"AxelRod","New York",.10),
(1008,"Fran","London",.25);

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | RifKin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+

2) Customers

CREATE TABLE Customers(CNUM int PRIMARY KEY,CNAME varchar(255),CITY varchar(255),RATING int,SNUM INT,FOREIGN KEY (SNUM) REFERENCES SalesPeople (SNUM));

INSERT INTO Customers VALUES 
(2001,"Hoffman","London",100,1001),
(2002,"Giovanni","Rome",200,1003),
(2003,"Liu","SanJose",200,1002),
(2004,"Grass","Berlin",300,1002),
(2005,"Clemens","London",100,1001),
(2006,"Cisneros","SanJose",300,1007),
(2007,"Pereira","Rome",100,1004);

+------+-----------+---------+--------+------+
| CNUM | CNAME     | CITY    | RATING | SNUM |
+------+-----------+---------+--------+------+
| 2001 | Hoffman   | London  |    100 | 1001 |
| 2002 | Giovanni  | Rome    |    200 | 1003 |
| 2003 | Liu       | SanJose |    200 | 1002 |
| 2004 | Grass     | Berlin  |    300 | 1002 |
| 2006 | Clemens   | Londan  |    100 | 1001 |
| 2007 | Pereira   | Rome    |    100 | 1004 |
| 2008 | Cisnerors | SanJose |    300 | 1007 |
+------+-----------+---------+--------+------+

3)Orders

CREATE TABLE Orders(ONUM int,AMT decimal(8,2),ODATE date,CNUM int,SNUM int,FOREIGN KEY (CNUM) REFERENCES Customers(CNUM),FOREIGN KEY (SNUM) REFERENCES SalesPeople(SNUM));

INSERT INTO Orders VALUES 
(3001,18.69,'1990-10-03',2008,1007),
(3003,767.19,'1990-10-03',2001,1001),
(3002,1900.10,'1990-10-03',2007,1004),
(3005,5160.45,'1990-10-03',2003,1002),
(3006,1098.16,'1990-10-03',2008,1007),
(3009,1713.23,'1990-10-03',2002,1003),
(3007,75.75,'1990-10-03',2004,1002),
(3008,4723.00,'1990-10-03',2006,1001),
(3010,1309.95,'1990-10-03',2004,1002),
(3011,9891.88,'1990-10-03',2006,1001);

+------+---------+------------+------+------+
| ONUM | ANT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
+------+---------+------------+------+------+

                                                              ALL QUESTIONS AND THEIR QUERIES :- 

1) List all the columns of the Salespeople table.
-> select * from salespeople;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |    0 |
| 1002 | Serres  | SanJose   |    0 |
| 1003 | AxelRod | New York  |    0 |
| 1004 | Motika  | London    |    0 |
| 1007 | Rifkn   | Barcelona |    0 |
| 1008 | Fran    | London    |    0 |
+------+---------+-----------+------+

2) List all customers with a rating of 100.
-> SELECT * from customers WHERE RATING = 100;

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2005 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+

3) Find the largest order taken by each salesperson on each date.
-> SELECT o.ONUM,MAX(AMT) ,ODATE,c.CNUM FROM orders o, customers c WHERE o.CNUM=c.CNUM GROUP BY ODATE,c.SNUM,o.ODATE;

+------+----------+------------+------+
| ONUM | MAX(AMT) | ODATE      | CNUM |
+------+----------+------------+------+
| 3003 |   767.19 | 1990-10-03 | 2001 |
| 3005 |  5160.45 | 1990-10-03 | 2003 |
| 3009 |  1713.23 | 1990-10-03 | 2002 |
| 3002 |  1900.10 | 1990-10-03 | 2007 |
| 3008 |  9891.88 | 1990-10-03 | 2006 |
+------+----------+------------+------+

4) Arrange the Order table by descending customer number.
-> SELECT * from orders Order by CNUM DESC;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-03 | 2006 | 1001 |
| 3007 |   75.75 | 1990-10-03 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-10-03 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-03 | 2002 | 1003 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+

5) Find which salespeople currently have orders in the order table.
-> SELECT SNAME from salespeople,orders  where orders.SNUM=salespeople.SNUM;

+---------+
| SNAME   |
+---------+
| Peel    |
| Peel    |
| Peel    |
| Serres  |
| Serres  |
| Serres  |
| AxelRod |
| Motika  |
| Rifkn   |
| Rifkn   |
+---------+

6) List names of all customers matched with the salespeople serving them.
-> SELECT SNAME  from salespeople,customers  where Customers.SNUM=salespeople.SNUM;

+---------+
| SNAME   |
+---------+
| Peel    |
| Peel    |
| Serres  |
| Serres  |
| AxelRod |
| Motika  |
| Rifkn   |

7) Find the names and numbers of all salespeople who have more than one customer.
-> SELECT s.SNUM ,SNAME FROM salespeople s ,customers c WHERE s.SNUM=c.SNUM AND c.SNUM>1;

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1001 | Peel    |
| 1002 | Serres  |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkn   |
+------+---------+

8) Count the orders of each of the salespeople and output the results in descending order.
-> SELECT count(onum), snum FROM Orders GROUP BY snum ORDER BY count(onum) DESC;

+-------------+------+
| count(onum) | snum |
+-------------+------+
|           3 | 1001 |
|           3 | 1002 |
|           2 | 1007 |
|           1 | 1003 |
|           1 | 1004 |
+-------------+------+

9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.
-> SELECT  * FROM customers WHERE city='SanJose';

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

10) Match salespeople to customers according to what city they live in.
-> SELECT SNAME,s.CITY,CNAME,c.CITY FROM salespeople s,customers c WHERE s.SNUM=c.SNUM ;

+---------+-----------+----------+---------+
| SNAME   | CITY      | CNAME    | CITY    |
+---------+-----------+----------+---------+
| Peel    | London    | Hoffman  | London  |
| AxelRod | New York  | Giovanni | Rome    |
| Serres  | SanJose   | Liu      | SanJose |
| Serres  | SanJose   | Grass    | Berlin  |
| Peel    | London    | Clemens  | London  |
| Rifkn   | Barcelona | Cisneros | SanJose |
| Motika  | London    | Pereira  | Rome    |
+---------+-----------+----------+---------+

11) Find all the customers in SanJose who have a rating above 200.
-> SELECT  * FROM customers where city = 'SanJose' AND RATING >200;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

12) List the names and commissions of all salespeople in London.
-> SELECT sname,comm FROM salespeople where city='london';

+--------+------+
| sname  | comm |
+--------+------+
| Peel   |    0 |
| Motika |    0 |
| Fran   |    0 |
+--------+------+

13) List all the orders of Salesperson Motika from the orders table.
-> SELECT orders.onum FROM orders,salespeople where orders.snum IN ( select snum from salespeople where  sname='motika')GROUP BY orders.snum ;

+------+
| onum |
+------+
| 3002 |
+------+

14) Find all customers who booked orders on October 3.
-> SELECT c.cname FROM customers c LEFT JOIN orders o ON c.cnum = o.cnum WHERE o.odate ='1990-10-03';

+----------+
| cname    |
+----------+
| Hoffman  |
| Pereira  |
| Liu      |
| Giovanni |
| Grass    |
| Cisneros |
| Grass    |
| Cisneros |
+----------+

15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above
the maximum Amount.
-> SELECT odate,sum(amt) FROM orders GROUP BY odate;

+------------+----------+
| odate      | sum(amt) |
+------------+----------+
| 1990-10-03 | 26658.40 |
+------------+----------+

16) Select all orders that had amounts that were greater than at least one of the orders from October 6.
-> SELECT * FROM orders WHERE amt>(SELECT MIN(amt)FROM orders WHERE ODATE = '1990-10-06');

Empty set (0.01 sec)

17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
SELECT * FROM salespeople WHERE EXISTS  (SELECT snum FROM customers WHERE  salespeople.snum=customers.snum and rating = 300);

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |    0 |
| 1007 | Rifkn  | Barcelona |    0 |
+------+--------+-----------+------+

18) Find all customers whose cnum is 1000 above the> snum of Serres.
-> SELECT cnum,cname FROM customers WHERE cnum>1000+(SELECT snum FROM salespeople WHERE sname='serres');

+------+----------+
| cnum | cname    |
+------+----------+
| 2003 | Liu      |
| 2004 | Grass    |
| 2005 | Clemens  |
| 2006 | Cisneros |
| 2007 | Pereira  |
+------+----------+

19) Give the salespeoples commissions as percentages instead of decimal numbers
> SELECT snum,sname,city,comm/100 FROM Salespeople;

+------+---------+-----------+----------+
| snum | sname   | city      | comm/100 |
+------+---------+-----------+----------+
| 1001 | Peel    | London    |   0.0000 |
| 1002 | Serres  | SanJose   |   0.0000 |
| 1003 | AxelRod | New York  |   0.0000 |
| 1004 | Motika  | London    |   0.0000 |
| 1007 | Rifkn   | Barcelona |   0.0000 |
| 1008 | Fran    | London    |   0.0000 |
+------+---------+-----------+----------+

20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.
-> SELECT s.SNUM,MAX(AMT),ODATE FROM orders o,salespeople s WHERE s.SNUM=o.SNUM  GROUP BY ODATE;

+------+----------+------------+
| SNUM | MAX(AMT) | ODATE      |
+------+----------+------------+
| 1007 |  9891.88 | 1990-10-03 |
+------+----------+------------+

21) List all the largest orders for October 3, for each salesperson.
->  SELECT b.sname, o.snum,o.odate,o.onum,o.amt FROM orders o, salespeople b, customers a WHERE odate='1990-10-03' AND a.snum=b.snum AND  a.snum=o.snum ORDER BY o.amt DESC;

+---------+------+------------+------+---------+
| sname   | snum | odate      | onum | amt     |
+---------+------+------------+------+---------+
| Peel    | 1001 | 1990-10-03 | 3011 | 9891.88 |
| Peel    | 1001 | 1990-10-03 | 3011 | 9891.88 |
| Serres  | 1002 | 1990-10-03 | 3005 | 5160.45 |
| Serres  | 1002 | 1990-10-03 | 3005 | 5160.45 |
| Peel    | 1001 | 1990-10-03 | 3008 | 4723.00 |
| Peel    | 1001 | 1990-10-03 | 3008 | 4723.00 |
| Motika  | 1004 | 1990-10-03 | 3002 | 1900.10 |
| AxelRod | 1003 | 1990-10-03 | 3009 | 1713.23 |
| Serres  | 1002 | 1990-10-03 | 3010 | 1309.95 |
| Serres  | 1002 | 1990-10-03 | 3010 | 1309.95 |
| Rifkn   | 1007 | 1990-10-03 | 3006 | 1098.16 |
| Peel    | 1001 | 1990-10-03 | 3003 |  767.19 |
| Peel    | 1001 | 1990-10-03 | 3003 |  767.19 |
| Serres  | 1002 | 1990-10-03 | 3007 |   75.75 |
| Serres  | 1002 | 1990-10-03 | 3007 |   75.75 |
| Rifkn   | 1007 | 1990-10-03 | 3001 |   18.69 |
+---------+------+------------+------+---------+

22) Find all customers located in cities where Serres has customers.
-> SELECT c.cname FROM customers c WHERE c.city = (SELECT c.city FROM customers c WHERE snum=(SELECT s.snum FROM salespeople s WHERE s.sname='Serres' )LIMIT 1);

+----------+
| cname    |
+----------+
| Liu      |
| Cisneros |
+----------+

23) Select all customers with a rating above 200.
> SELECT * FROM customers WHERE RATING>200;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

24) Count the number of salespeople currently having orders in the orders table.
> SELECT COUNT(DISTINCT SNUM) FROM orders;

+----------------------+
| COUNT(DISTINCT SNUM) |
+----------------------+
|                    5 |
+----------------------+

25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customers name,
salespersons name and the salespersons rate of commission.
> SELECT customers.CNAME ,salespeople.SNAME,salespeople.COMM FROM customers INNER JOIN salespeople ON customers.SNUM=salespeople.SNUM WHERE salespeople.COMM>12;

Empty set (0.00 sec)

26) Find salespeople who have multiple customers.
-> SELECT s.SNUM,s.SNAME FROM salespeople s,customers c WHERE s.SNUM=c.SNUM AND c.SNUM>1;

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1001 | Peel    |
| 1002 | Serres  |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkn   |
+------+---------+

27) Find salespeople with customers located in their own cities.
> SELECT * FROM salespeople INNER JOIN customers ON customers.SNUM =salespeople.SNUM where customers.CITY =salespeople.CITY;

+------+--------+---------+------+------+---------+---------+--------+------+
| SNUM | SNAME  | CITY    | COMM | CNUM | CNAME   | CITY    | RATING | SNUM |
+------+--------+---------+------+------+---------+---------+--------+------+
| 1001 | Peel   | London  |    0 | 2001 | Hoffman | London  |    100 | 1001 |
| 1002 | Serres | SanJose |    0 | 2003 | Liu     | SanJose |    200 | 1002 |
| 1001 | Peel   | London  |    0 | 2005 | Clemens | London  |    100 | 1001 |
+------+--------+---------+------+------+---------+---------+--------+------+

28) Find all salespeople whose name starts with P and fourth character is I.
-> SELECT * FROM salespeople WHERE SNAME LIKE "P    I%";

Empty set (0.00 sec)

29) Write a query that uses a subquery to obtain all orders for the customer named Cisneros. Assume you do not know his customer number.
-> SELECT ONUM,ODATE,AMT FROM orders WHERE CNUM = (SELECT CNUM FROM customers  WHERE CNAME = "cisneros");

+------+------------+---------+
| ONUM | ODATE      | AMT     |
+------+------------+---------+
| 3008 | 1990-10-03 | 4723.00 |
| 3011 | 1990-10-03 | 9891.88 |
+------+------------+---------+

30) Find the largest orders for Serres and Rifkin.
-> SELECT SNAME , MAX(AMT) FROM salespeople s,orders o 
WHERE s.SNUM=o.SNUM AND SNAME IN ("serres","Rifkin");

+--------+----------+
| SNAME  | MAX(AMT) |
+--------+----------+
| Serres |  5160.45 |
+--------+----------+

31) Sort the salespeople table in the following order: snum, sname, commission, city.
-> SELECT SNUM,SNAME,COMM,CITY FROM salespeople;

+------+---------+------+-----------+
| SNUM | SNAME   | COMM | CITY      |
+------+---------+------+-----------+
| 1001 | Peel    |    0 | London    |
| 1002 | Serres  |    0 | SanJose   |
| 1003 | AxelRod |    0 | New York  |
| 1004 | Motika  |    0 | London    |
| 1007 | Rifkn   |    0 | Barcelona |
| 1008 | Fran    |    0 | London    |
+------+---------+------+-----------+

32) Select all customers whose names fall in between 'A' and 'G' alphabetical range.    
-> SELECT * FROM Customers
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2005 | Clemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+                                  

33) Select all the possible combinations of customers you can assign.
-> SELECT c.cname,s.sname FROM customers c JOIN salespeople s ON c.snum=s.snum;

+----------+---------+
| cname    | sname   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Cisneros | Rifkn   |
| Pereira  | Motika  |
+----------+---------+

34) Select all orders that are greater than the average for October 4.
-> SELECT AMT FROM orders WHERE AMT>(SELECT AVG(AMT) FROM orders WHERE ODATE = "1990-10-04");

Empty set (0.00 sec)

35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum
for their city.
-> SELECT CNAME,CNUM FROM customers WHERE RATING>= RATING IN(SELECT MAX(RATING) FROM customers GROUP BY CITY) ;

+----------+------+
| CNAME    | CNUM |
+----------+------+
| Hoffman  | 2001 |
| Giovanni | 2002 |
| Liu      | 2003 |
| Grass    | 2004 |
| Clemens  | 2005 |
| Cisneros | 2006 |
| Pereira  | 2007 |
+----------+------+

36) Write a query that totals the orders for each day and places the results in descending order.
-> SELECT ODATE,COUNT(ODATE) FROM orders GROUP BY ODATE ORDER BY COUNT(ONUM) DESC;

+------------+--------------+
| ODATE      | COUNT(ODATE) |
+------------+--------------+
| 1990-10-03 |           10 |
+------------+--------------+

37) Write a select command that produces the rating followed by the name of each customer in SanJose.
-> SELECT CNAME,RATING 
FROM customers WHERE CITY ="SANJOSE";

+----------+--------+
| CNAME    | RATING |
+----------+--------+
| Liu      |    200 |
| Cisneros |    300 |
+----------+--------+

38) Find all orders with amounts smaller than any amount for a customer in SanJose.
-> SELECT * FROM orders WHERE AMT <ANY 
 (SELECT AMT FROM orders o INNER JOIN customers c ON o.CNUM = c.CNUM WHERE CITY ="SanJose");

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-03 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-03 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-03 | 2004 | 1002 |
+------+---------+------------+------+------+

39) Find all orders with above average amounts for their customers.
-> SELECT * FROM orders WHERE amt>(SELECT AVG(AMT) FROM orders o LEFT JOIN customers c ON o.CNUM=c.CNUM);

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-03 | 2006 | 1001 |
+------+---------+------------+------+------+

40) Write a query that selects the highest rating in each city
-> SELECT MAX(RATING) ,CITY FROM customers GROUP BY CITY;

+-------------+---------+
| MAX(RATING) | CITY    |
+-------------+---------+
|         100 | London  |
|         200 | Rome    |
|         300 | SanJose |
|         300 | Berlin  |
+-------------+---------+

41) Write a query that calculates the amount of the salespersons commission on each order by a customer with a rating above 100.00.
-> SELECT s.sname,comm*amt FROM salespeople s,orders WHERE s.snum IN(SELECT snum FROM customers WHERE rating > 100);

+---------+----------+
| sname   | comm*amt |
+---------+----------+
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
| Rifkn   |     0.00 |
| Serres  |     0.00 |
| AxelRod |     0.00 |
+---------+----------+

42) Count the customers with ratings above SanJoses average.
-> SELECT * FROM customers WHERE RATING>(SELECT AVG(RATING) FROM customers WHERE CITY="sanJose");

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

43) Find all salespeople that are located in either Barcelona or London.
-> SELECT * FROM salespeople WHERE  CITY IN ("Barcelona","London");

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |    0 |
| 1004 | Motika | London    |    0 |
| 1007 | Rifkn  | Barcelona |    0 |
| 1008 | Fran   | London    |    0 |
+------+--------+-----------+------+

44) Find all salespeople with only one customer.
-> SELECT s.SNAME ,s.SNUM FROM salespeople s,(SELECT SNUM ,COUNT(*) as cust_count FROM customers GROUP BY SNUM HAVING CUST_count=1)c WHERE s.snum=c.SNUM;

+---------+------+
| SNAME   | SNUM |
+---------+------+
| AxelRod | 1003 |
| Motika  | 1004 |
| Rifkn   | 1007 |
+---------+------+

45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.
-> SELECT CNUM,CNAME,c.CITY,RATING,c.SNUM FROM customers c LEFT JOIN salespeople s ON c.SNUM=s.SNUM WHERE c.SNUM>1;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2005 | Clemens  | London  |    100 | 1001 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

46) Write a query that will give you all orders for more than $1000.00.
-> SELECT * FROM Orders WHERE amt > '1000.00';

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-03 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-03 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-03 | 2006 | 1001 |
+------+---------+------------+------+------+

47) Write a query that lists each order number followed by the name of the customer who made that order.
-> SELECT O.onum, c.cname FROM Orders o, Customers c WHERE O.cnum = c.cnum ORDER BY o.onum;

+------+----------+
| onum | cname    |
+------+----------+
| 3002 | Pereira  |
| 3003 | Hoffman  |
| 3005 | Liu      |
| 3007 | Grass    |
| 3008 | Cisneros |
| 3009 | Giovanni |
| 3010 | Grass    |
| 3011 | Cisneros |
+------+----------+

48)  Write a query that selects all the Customers   to or greater than ANY(in the SQL sense) of ‘Serres’.
-> SELECT cname,rating FROM Customers WHERE rating >= ANY (SELECT rating FROM Customers WHERE snum = (SELECT snum from SalesPeople WHERE sname = 'serres'));

+----------+--------+
| cname    | rating |
+----------+--------+
| Giovanni |    200 |
| Liu      |    200 |
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+

49) Write two queries that will produce all Orders taken on October 3 or October 4.
-> SELECT * FROM Orders WHERE odate in ('1990-10-03','1990-10-04');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-03 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-03 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-03 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-03 | 2006 | 1001 |
+------+---------+------------+------+------+

50) Find only those Customers whose ratings are higher than every customer in Rome.
-> SELECT cname,rating FROM Customers WHERE rating > ANY (SELECT max(rating) FROM Customers WHERE city = 'Rome');

+----------+--------+
| cname    | rating |
+----------+--------+
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+

51) Write a query on the Customers table whose output will exclude all Customers with a rating<= 100.00, unless they are located in Rome.
-> SELECT s.sname,c.cname,c.rating FROM customers c,salespeople s WHERE c.rating<200 GROUP BY s.sname,c.cname,c.rating HAVING c.cname>=s.sname;

+---------+---------+--------+
| sname   | cname   | rating |
+---------+---------+--------+
| Peel    | Pereira |    100 |
| AxelRod | Pereira |    100 |
| AxelRod | Clemens |    100 |
| AxelRod | Hoffman |    100 |
| Motika  | Pereira |    100 |
| Fran    | Pereira |    100 |
| Fran    | Hoffman |    100 |
+---------+---------+--------+

52) Find all rows from the customer’s table for which the salesperson number is 1001.
-> Select * from Customers where SNUM=1001;

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2005 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+

53) Find the total amount in Orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table.
-> SELECT snum,sum(amt) FROM Orders GROUP BY snum HAVING sum(amt) > (SELECT max(amt) FROM Orders);	

+------+----------+
| snum | sum(amt) |
+------+----------+
| 1001 | 15382.07 |
+------+----------+

54) Write a query that selects all Orders save those with zeroes or NULL in the amount file.
-> Select * from Orders where AMT IN(0,Null);

Empty set (0.00 sec)

55) Produce all combinations of SalesPeople and customer names such that the former precedes the latter alphabetically, and the latter has a
rating of less than 200.
->  SELECT s.sname,c.cname,c.rating FROM customers c,salespeople s WHERE c.rating<200 GROUP BY s.sname,c.cname,c.rating HAVING c.cname>=s.sname;

+---------+---------+--------+
| sname   | cname   | rating |
+---------+---------+--------+
| Peel    | Pereira |    100 |
| AxelRod | Pereira |    100 |
| AxelRod | Clemens |    100 |
| AxelRod | Hoffman |    100 |
| Motika  | Pereira |    100 |
| Fran    | Pereira |    100 |
| Fran    | Hoffman |    100 |
+---------+---------+--------+

56) Find all SalesPeople name and commission.
->  SELECT sname AS SalesPeople,comm AS commission FROM SalesPeople;

+-------------+------------+
| SalesPeople | commission |
+-------------+------------+
| Peel        |          0 |
| Serres      |          0 |
| AxelRod     |          0 |
| Motika      |          0 |
| Rifkn       |          0 |
| Fran        |          0 |
+-------------+------------+

57) Write a query that produces the names and cities of all Customers with the same rating as Hoffman. Write the query using Hoffman’s cnum
rather than his rating, so that it would still be usable if his rating is changed.
-> SELECT CNAME, CITY FROM Customers WHERE CNUM IN (SELECT CNUM FROM Customers WHERE RATING IN (SELECT RATING FROM Customers WHERE CNAME = 'hoffman'));

+---------+--------+
| CNAME   | CITY   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| Pereira | Rome   |
+---------+--------+

58) Find all SalesPeople for whom there are Customers that follow them in alphabetical order.
-> SELECT s.sname,c.cname FROM customers c, salespeople s WHERE s.snum=c.snum GROUP BY s.sname,c.cname HAVING c.cname >= s.sname;

+---------+----------+
| sname   | cname    |
+---------+----------+
| AxelRod | Giovanni |
| Motika  | Pereira  |
+---------+----------+

59) Write a query that produces the names and ratings of all Customers who have average Orders.
-> SELECT CNAME,RATING  FROM customers  INNER JOIN orders ON customers.cnum=orders.cnum WHERE AMT>(SELECT AVG(AMT) FROM orders )GROUP BY CNAME;

+----------+--------+
| CNAME    | RATING |
+----------+--------+
| Liu      |    200 |
| Cisneros |    300 |
+----------+--------+

60) Find the SUM of all Amounts from the Orders table.
-> SELECT sum(AMT) FROM Orders;

+----------+
| sum(AMT) |
+----------+
| 26658.40 |
+----------+

61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table.
-> SELECT ONUM AS orderNumber, AMT AS amount, ODATE AS date FROM Orders;

+-------------+---------+------------+
| orderNumber | amount  | date       |
+-------------+---------+------------+
|        3001 |   18.69 | 1990-10-03 |
|        3003 |  767.19 | 1990-10-03 |
|        3002 | 1900.10 | 1990-10-03 |
|        3005 | 5160.45 | 1990-10-03 |
|        3006 | 1098.16 | 1990-10-03 |
|        3009 | 1713.23 | 1990-10-03 |
|        3007 |   75.75 | 1990-10-03 |
|        3008 | 4723.00 | 1990-10-03 |
|        3010 | 1309.95 | 1990-10-03 |
|        3011 | 9891.88 | 1990-10-03 |
+-------------+---------+------------+

62) Count the number of non NULL rating fields in the Customers table (including repeats).
-> SELECT count(RATING) FROM Customers WHERE RATING IS NOT NULL;

+---------------+
| count(RATING) |
+---------------+
|             7 |
+---------------+

63) Write a query that gives the names of both the salesperson and the customer for each order after the order number. 
-> SELECT o.ONUM, s.SNUM, c.CNAME FROM Orders o, SalesPeople s, Customers c WHERE o.SNUM = s.SNUM AND o.CNUM = c.CNUM;

+------+------+----------+
| ONUM | SNUM | CNAME    |
+------+------+----------+
| 3003 | 1001 | Hoffman  |
| 3009 | 1003 | Giovanni |
| 3005 | 1002 | Liu      |
| 3007 | 1002 | Grass    |
| 3010 | 1002 | Grass    |
| 3008 | 1001 | Cisneros |
| 3011 | 1001 | Cisneros |
| 3002 | 1004 | Pereira  |
+------+------+----------+

64) List the commissions of all salespeople servicing customers in London.
-> SELECT s.SNAME AS SalesMen, s.CITY, c.CNAME AS Customers, c.CITY FROM SalesPeople s, Customers c where s.SNUM = c.SNUM AND c.CITY = 'London' GROUP BY s.SNUM;

+----------+--------+-----------+--------+
| SalesMen | CITY   | Customers | CITY   |
+----------+--------+-----------+--------+
| Peel     | London | Hoffman   | London |
+----------+--------+-----------+--------+

65) Write a query using ANY or ALL that will find all SalesPeople who have no Customers located in their city.
-> SELECT s.SNAME,s.CITY, c.CNAME, c.CITY FROM SalesPeople s, Customers c WHERE s.SNUM = c.SNUM AND S.CITY != ANY (select c.CITY FROM Customers);

+---------+-----------+----------+---------+
| SNAME   | CITY      | CNAME    | CITY    |
+---------+-----------+----------+---------+
| AxelRod | New York  | Giovanni | Rome    |
| Serres  | SanJose   | Grass    | Berlin  |
| Rifkn   | Barcelona | Cisneros | SanJose |
| Motika  | London    | Pereira  | Rome    |
+---------+-----------+----------+---------+

66) Write a query using the EXISTS operator that selects all SalesPeople with Customers located in their cities who are not assigned to them.
-> SELECT s.SNAME ,s.CITY , c.CNAME,c.CITY FROM SalesPeople s, Customers c WHERE EXISTS (SELECT CNUM FROM Customers WHERE s.SNUM <> c.SNUM AND s.CITY = c.CITY);

+--------+---------+----------+---------+
| SNAME  | CITY    | CNAME    | CITY    |
+--------+---------+----------+---------+
| Fran   | London  | Hoffman  | London  |
| Motika | London  | Hoffman  | London  |
| Fran   | London  | Clemens  | London  |
| Motika | London  | Clemens  | London  |
| Serres | SanJose | Cisneros | SanJose |

67) Write a query that selects all Customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.)
-> SELECT c.cnum,c.cname,c.city,c.rating,c.snum FROM Customers c, SalesPeople s WHERE s.snum = c.snum AND s.sname IN ('Peel','motika');

+------+---------+--------+--------+------+
    -> | cnum | cname   | city   | rating | snum |
    -> +------+---------+--------+--------+------+
    -> | 2001 | Hoffman | London |    100 | 1001 |
    -> | 2005 | Clemens | London |    100 | 1001 |
    -> | 2007 | Pereira | Rome   |    100 | 1004 |
    -> +------+---------+--------+--------+------+

68) Count the number of SalesPeople registering Orders for each day. (If a salesperson has more than one order on a given day, he or she should
be counted only once.)
->  SELECT count(DISTINCT snum),odate FROM orders GROUP BY odate;

+----------------------+------------+
| count(DISTINCT snum) | odate      |
+----------------------+------------+
|                    5 | 1990-10-03 |
+----------------------+------------+

69) Find all Orders attributed to SalesPeople who live in London.
-> SELECT * FROM Orders o, SalesPeople s WHERE s.SNUM = o.SNUM AND s.CITY = 'London' GROUP BY s.SNUM;

+------+---------+------------+------+------+------+--------+--------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM | SNUM | SNAME  | CITY   | COMM |
+------+---------+------------+------+------+------+--------+--------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 | 1001 | Peel   | London |    0 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 | 1004 | Motika | London |    0 |
+------+---------+------------+------+------+------+--------+--------+------+

70) Find all orders by customers not located in the same cities as their salespeople.
-> SELECT a.sname,a.city,b.cname,b.city AS cus_city FROM salespeople a,customers b WHERE a.snum=b.snum AND a.city!=b.city;

+---------+-----------+----------+----------+
| sname   | city      | cname    | cus_city |
+---------+-----------+----------+----------+
| AxelRod | New York  | Giovanni | Rome     |
| Serres  | SanJose   | Grass    | Berlin   |
| Rifkn   | Barcelona | Cisneros | SanJose  |
| Motika  | London    | Pereira  | Rome     |
+---------+-----------+----------+----------+


71) Find all SalesPeople who have Customers with more than one current order.
-> SELECT DISTINCT snum FROM orders WHERE cnum IN (SELECT cnum FROM orders  GROUP BY cnum HAVING count(cnum)>1);

+------+
| snum |
+------+
| 1001 |
| 1002 |
| 1007 |
+------+

72) Write a query that extracts from the customer’s table every customer assigned to a salesperson, who is currently having at least one another
customer(besides the customer being selected) with orders in the Orders Table.
-> SELECT SNUM FROM customers  GROUP BY SNUM HAVING count(SNUM)>1;

+------+
| SNUM |
+------+
| 1001 |
| 1002 |
+------+

73) Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest
rating is (rating).
-> SELECT  CITY "(city)", max(RATING) "(rating)" FROM Customers GROUP BY CITY;

+---------+----------+
| (city)  | (rating) |
+---------+----------+
| London  |      100 |
| Rome    |      200 |
| SanJose |      300 |
| Berlin  |      300 |
+---------+----------+

74) Write a query that will produce the snum values of all SalesPeople with Orders, having amt greater than 1000 in the Orders Table(without repeats).
-> SELECT * FROM Orders WHERE AMT > 1000 GROUP BY SNUM;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-03 | 2002 | 1003 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
+------+---------+------------+------+------+

75) Write a query that lists Customers in a descending order of rating. Output the rating field first, followed by the customer’s names and numbers.
-> SELECT RATING , CNAME "customer’s names", CNUM"numbers", CITY FROM Customers ORDER BY RATING DESC;

+--------+------------------+---------+---------+
| RATING | customer?s names | numbers | CITY    |
+--------+------------------+---------+---------+
|    300 | Grass            |    2004 | Berlin  |
|    300 | Cisneros         |    2006 | SanJose |
|    200 | Giovanni         |    2002 | Rome    |
|    200 | Liu              |    2003 | SanJose |
|    100 | Hoffman          |    2001 | London  |
|    100 | Clemens          |    2005 | London  |
|    100 | Pereira          |    2007 | Rome    |
+--------+------------------+---------+---------+

76) Find the average commission for SalesPeople in London.
-> SELECT avg(COMM) FROM SalesPeople WHERE CITY = 'London';

+-----------+
| avg(COMM) |
+-----------+
|    0.0000 |
+-----------+

77) Find all Orders credited to the same salesperson who services Hoffman.(cnum 2001).
-> SELECT o.onum FROM orders o WHERE o.snum=(SELECT snum FROM customers WHERE cname='Hoffman');

+------+
| onum |
+------+
| 3003 |
| 3008 |
| 3011 |
+------+

78) Find all SalesPeople whose commission is in between 0.10 and 0.12(both inclusive).
-> SELECT * FROM SalesPeople WHERE comm BETWEEN 0.10 AND 0.12;

Empty set (0.01 sec)

79) Write a query that will give you the names and cities of all SalesPeople in London with a commission above 0.10.
-> SELECT SNAME "names", CITY "cities" FROM SalesPeople WHERE CITY = 'London' AND COMM > 0.10;

Empty set (0.00 sec)

80) Write a query that selects each customer’s smallest order. 
-> SELECT c.cname, min(o.amt) FROM customers c, orders o WHERE  C.cnum=O.cnum  GROUP BY c.cname ORDER BY min(o.amt);

+----------+------------+
| cname    | min(o.amt) |
+----------+------------+
| Grass    |      75.75 |
| Hoffman  |     767.19 |
| Giovanni |    1713.23 |
| Pereira  |    1900.10 |
| Cisneros |    4723.00 |
| Liu      |    5160.45 |
+----------+------------+

81) Write a query that selects the first customer in alphabetical order whose name begins with ‘G’.
-> SELECT CNAME "Customers name" FROM Customers WHERE CNAME like 'g%' ORDER BY CNAME;

+----------------+
| Customers name |
+----------------+
| Giovanni       |
| Grass          |
+----------------+

82) Write a query that counts the number of different non NULL city values in the Customers table.
->  SELECT count(distinct CITY) "City" FROM Customers WHERE CITY IS NOT NULL;

+------+
| City |
+------+
|    4 |
+------+

83) Find the average amount from the Orders Table.
-> SELECT avg(AMT) "average amount" FROM Orders;

+----------------+
| average amount |
+----------------+
|    2665.840000 |
+----------------+

84) Find all Customers who are not located in SanJose and whose rating is above 200.
-> SELECT * FROM Customers WHERE CITY <> 'sanjose' AND RATING > 200;

+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | RATING | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+

85) Give a simpler way to write this query.SELECT snum, sname, city, comm FROM SalesPeople WHERE (comm > + 0.12 OR comm < 0.14);
-> SELECT * FROM salespeople WHERE (comm>0.12 OR comm<0.14);

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |    0 |
| 1002 | Serres  | SanJose   |    0 |
| 1003 | AxelRod | New York  |    0 |
| 1004 | Motika  | London    |    0 |
| 1007 | Rifkn   | Barcelona |    0 |
| 1008 | Fran    | London    |    0 |
+------+---------+-----------+------+

86) Which salespersons attend to Customers not in the city they have been assigned to?
-> SELECT s.SNUM,s.SNAME,s.CITY,c.CITY AS customers  FROM salespeople s JOIN customers c ON s.SNUM=c.SNUM WHERE s.CITY <> c.CITY;

+------+---------+-----------+-----------+
| SNUM | SNAME   | CITY      | customers |
+------+---------+-----------+-----------+
| 1003 | AxelRod | New York  | Rome      |
| 1002 | Serres  | SanJose   | Berlin    |
| 1007 | Rifkn   | Barcelona | SanJose   |
| 1004 | Motika  | London    | Rome      |
+------+---------+-----------+-----------+


87) Which SalesPeople get commission greater than 0.11 are serving Customers rated less than 250?
-> SELECT s.SNUM "Number" ,s.SNAME "sales men" ,s.COMM "commission" ,c.RATING "Rating" ,c.CNAME "Customers" FROM SalesPeople s, Customers c WHERE s.SNUM = c.SNUM AND (s.COMM > 0.11 AND c.RATING < 250);

Empty set (0.00 sec)

88) Which SalesPeople have been assigned to the same city but get different commission percentages?
-> SELECT * FROM salespeople WHERE CITY ="london";

+------+--------+--------+------+
| SNUM | SNAME  | CITY   | COMM |
+------+--------+--------+------+
| 1001 | Peel   | London |    0 |
| 1004 | Motika | London |    0 |
| 1008 | Fran   | London |    0 |
+------+--------+--------+------+

89) Which salesperson has earned the maximum commission?
-> SELECT SNUM "number", SNAME "salesperson", COMM "commission" from SalesPeople where COMM in (select max(COMM) from SalesPeople);

+--------+-------------+------------+
| number | salesperson | commission |
+--------+-------------+------------+
|   1001 | Peel        |          0 |
|   1002 | Serres      |          0 |
|   1003 | AxelRod     |          0 |
|   1004 | Motika      |          0 |
|   1007 | Rifkn       |          0 |
|   1008 | Fran        |          0 |
+--------+-------------+------------+

90) Does the customer who has placed the maximum number of Orders have the maximum rating?
-> SELECT c.CNUM,CNAME,CITY,COUNT(o.CNUM),MAX(RATING) FROM customers c JOIN orders o ON o.CNUM= c.CNUM ;

+------+---------+--------+---------------+-------------+
| CNUM | CNAME   | CITY   | COUNT(o.CNUM) | MAX(RATING) |
+------+---------+--------+---------------+-------------+
| 2001 | Hoffman | London |             8 |         300 |
+------+---------+--------+---------------+-------------+

91) List all Customers in descending order of customer rating.
-> SELECT * FROM Customers ORDER BY RATING DESC;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2005 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+

92) On which days has Hoffman placed Orders?
-> SELECT c.CNAME "customer", o.ONUM "Number", o.AMT "amount", o.ODATE "Date" FROM Orders o, Customers c WHERE c.CNUM = o.CNUM AND ( c.CNAME = 'Hoffman');

+----------+--------+--------+------------+
| customer | Number | amount | Date       |
+----------+--------+--------+------------+
| Hoffman  |   3003 | 767.19 | 1990-10-03 |
+----------+--------+--------+------------+

93) Which salesmen have no Orders between 10/03/1990 and 10/05/1990?
-> SELECT  b.sname,c.odate FROM customers a,salespeople b,orders c WHERE a.snum=b.snum AND a.cnum=c.cnum AND odate NOT BETWEEN '1996-03-10' AND '1996-05-10';

+---------+------------+
| sname   | odate      |
+---------+------------+
| Peel    | 1990-10-03 |
| Serres  | 1990-10-03 |
| Serres  | 1990-10-03 |
| Serres  | 1990-10-03 |
| AxelRod | 1990-10-03 |
| Motika  | 1990-10-03 |
| Rifkn   | 1990-10-03 |
| Rifkn   | 1990-10-03 |
+---------+------------+

94) How many salespersons have succeeded in getting Orders?
-> SELECT count(distinct SNUM) "Total salesmen" FROM Orders;

+----------------+
| Total salesmen |
+----------------+
|              5 |
+----------------+

95) How many Customers have placed Orders?
-> SELECT count(distinct CNUM) "Total salesmen" FROM Orders;

+----------------+
| Total salesmen |
+----------------+
|              7 |
+----------------+

96) On which date has each salesman booked an order of maximum value?
-> SELECT SNUM "sales number", ONUM "number", ODATE "Date", AMT "maxmaximum value" FROM Orders WHERE AMT IN (SELECT max(AMT) FROM Orders GROUP BY SNUM);

+--------------+--------+------------+------------------+
| sales number | number | Date       | maxmaximum value |
+--------------+--------+------------+------------------+
|         1004 |   3002 | 1990-10-03 |          1900.10 |
|         1002 |   3005 | 1990-10-03 |          5160.45 |
|         1007 |   3006 | 1990-10-03 |          1098.16 |
|         1003 |   3009 | 1990-10-03 |          1713.23 |
|         1001 |   3011 | 1990-10-03 |          9891.88 |
+--------------+--------+------------+------------------+

97) Who is the most successful salesperson?
-> SELECT s.SNUM, s.SNAME,sum(AMT) FROM Salespeople s, Orders o WHERE s.SNUM = o.SNUM GROUP BY o.SNUM HAVING sum(AMT) > (SELECT max(AMT) FROM orders);

+------+-------+----------+
| SNUM | SNAME | sum(AMT) |
+------+-------+----------+
| 1001 | Peel  | 15382.07 |
+------+-------+----------+

98) Which Customers have the same rating?
-> SELECT c1.CNAME, c2.CNAME, c1.RATING, c2.RATING from Customers c1,Customers c2 WHERE c1.SNUM <> c2.SNUM AND c1.RATING = c2.RATING order by c1.RATING;

+----------+----------+--------+--------+
| CNAME    | CNAME    | RATING | RATING |
+----------+----------+--------+--------+
| Pereira  | Hoffman  |    100 |    100 |
| Pereira  | Clemens  |    100 |    100 |
| Clemens  | Pereira  |    100 |    100 |
| Hoffman  | Pereira  |    100 |    100 |
| Liu      | Giovanni |    200 |    200 |
| Giovanni | Liu      |    200 |    200 |
| Cisneros | Grass    |    300 |    300 |
| Grass    | Cisneros |    300 |    300 |
+----------+----------+--------+--------+

99) Find all Orders greater than the average for October 4th.
-> SELECT odate,AVG(amt) FROM orders WHERE odate!='1996-04-10' GROUP BY  odate;

+------------+-------------+
| odate      | AVG(amt)    |
+------------+-------------+
| 1990-10-03 | 2665.840000 |
+------------+-------------+
                        
100) List all Customers with ratings above Grass’s average.
->SELECT  cname FROM customers WHERE rating >=(SELECT AVG(rating) FROM customers WHERE cname='grass');

+----------+
| cname    |
+----------+
| Grass    |
| Cisneros |
+----------+

101) Which Customers have above average Orders?
-> SELECT * FROM orders WHERE AMT>(SELECT AVG(AMT) FROM orders);

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3008 | 4723.00 | 1990-10-03 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-03 | 2006 | 1001 |
+------+---------+------------+------+------+

102) Select the total amount in Orders for each salesperson for which the total is greater than the amount of the largest order in the table.
-> SELECT o.ONUM, s.SNUM, s.SNAME, sum(AMT) FROM Salespeople s, Orders o WHERE s.SNUM = o.SNUM GROUP BY o.SNUM HAVING sum(AMT) > (SELECT max(AMT) FROM Orders);

+------+------+-------+----------+
| ONUM | SNUM | SNAME | sum(AMT) |
+------+------+-------+----------+
| 3003 | 1001 | Peel  | 15382.07 |
+------+------+-------+----------+

103) Give names and numbers of all salespersons that have more than one customer?
-> SELECT s.SNUM "numbers", s.SNAME "name" FROM SalesPeople s,Customers c WHERE s.SNUM = c.SNUM group by c.SNUM having count(c.SNUM) > 1;

+---------+--------+
| numbers | name   |
+---------+--------+
|    1001 | Peel   |
|    1002 | Serres |
+---------+--------+

104) Select all SalesPeople by name and number who have Customers in their city whom they don’t service.
-> SELECT DISTINCT s.SNUM,s.SNAME FROM SalesPeople s, Customers c WHERE s.CITY = c.CITY AND c.SNUM <> s.SNUM;

+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1008 | Fran   |
| 1004 | Motika |
| 1002 | Serres |
+------+--------+

105) Does the total amount in Orders by customer in Rome and London, exceed the commission paid to salesperson in London, and New York by
more than 5 times?
-> SELECT  (SELECT sum(a.amt*c.comm) AS totalsales FROM orders a,customers b,salespeople c WHERE a.cnum=b.cnum AND b.snum=c.snum AND (c.city='London' OR c.city='New York')) AS A,(SELECT sum(a.amt) FROM orders a,customers b WHERE a.cnum=b.cnum AND (b.city='Rome' OR b.city='London')) AS B;

+------+---------+
| A    | B       |
+------+---------+
| 0.00 | 4380.52 |
+------+---------+

106) Which are the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?
-> SELECT o.onum,o.snum,s.city,o.odate,o.amt FROM orders o,salespeople s WHERE o.snum=s.snum AND amt IN(select max(amt) FROM orders GROUP BY  snum);

+------+------+-----------+------------+---------+
| onum | snum | city      | odate      | amt     |
+------+------+-----------+------------+---------+
| 3002 | 1004 | London    | 1990-10-03 | 1900.10 |
| 3005 | 1002 | SanJose   | 1990-10-03 | 5160.45 |
| 3006 | 1007 | Barcelona | 1990-10-03 | 1098.16 |
| 3009 | 1003 | New York  | 1990-10-03 | 1713.23 |
| 3011 | 1001 | London    | 1990-10-03 | 9891.88 |
+------+------+-----------+------------+---------+

107) Which salesperson is having lowest commission?
-> SELECt * FROM SalesPeople WHERE COMM IN (SELECT min(COMM) from SalesPeople);

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |    0 |
| 1002 | Serres  | SanJose   |    0 |
| 1003 | AxelRod | New York  |    0 |
| 1004 | Motika  | London    |    0 |
| 1007 | Rifkn   | Barcelona |    0 |
| 1008 | Fran    | London    |    0 |
+------+---------+-----------+------+